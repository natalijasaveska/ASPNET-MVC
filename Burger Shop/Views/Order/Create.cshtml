@model Burger_Shop.Models.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Create new order";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateOrder" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label" hidden></label>
                <input asp-for="Id" class="form-control"  hidden/>
                <span asp-validation-for="Id" class="text-danger" hidden></span>
            </div>
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label" ></label>
                <input asp-for="TotalPrice" class="form-control"  />
                <span asp-validation-for="TotalPrice" class="text-danger" ></span>
            </div>
            <div class="form-group">
                <label asp-for="BurgerId" class="control-label"></label>
                <select asp-for="BurgerId" asp-items="@(new SelectList(ViewBag.Burgers, "Id", "Name"))" class="form-control"></select>
                <span asp-validation-for="BurgerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
